name: Server Files Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release version tag"
        required: true

env:
  CFG_WORKING_DIR: "config"
  LIN64_DIST_DIR: "linux-x64-dist"
  LINARM64_DIST_DIR: "linux-arm64-dist"
  GIT_TAG: ${{ github.event.inputs.release_tag }}

jobs:      
  serverfiles_release:
    runs-on: ubuntu-latest
    #runs-on: x86
    steps:
      - name: Checkout distrib
        uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: ${{ env.CFG_WORKING_DIR }}

      - name: Generate dist directories
        run: |
          mkdir -p ${{ env.LIN64_DIST_DIR }}/action
          mkdir -p ${{ env.LINARM64_DIST_DIR }}/action

      ## Linux x86_64
      - name: Download latest Linux x86_64 Q2Pro artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: Q2Pro-Linux.yaml
          name: q2pro-linux-x86_64
          path: ${{ env.LIN64_DIST_DIR }}/

      - name: Set Linux binaries to executable, remove q2pro
        run: |
          chmod +x ${{ env.LIN64_DIST_DIR }}/q2proded
          rm -rf ${{ env.LIN64_DIST_DIR }}/q2pro

      - name: Download latest Linux x86_64 TNG artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: TNG-Linux.yaml
          name: tng-lin-x86_64-library
          path: ${{ env.LIN64_DIST_DIR }}/tng

      - name: Download latest Linux x86_64 q2admin artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: q2admin-Linux.yaml
          name: q2admin-lin-x86_64-library
          path: ${{ env.LIN64_DIST_DIR }}/q2admin
      
      - name: Copy server files, initial maps, q2admin and TNG
        run: |
          cp -r ${{ env.CFG_WORKING_DIR }}/server/serverfiles/* ${{ env.LIN64_DIST_DIR }}/action/
          cp ${{ env.LIN64_DIST_DIR }}/q2admin/gamex86_64.so ${{ env.LIN64_DIST_DIR }}/action/gamex86_64.so
          cp -r ${{ env.LIN64_DIST_DIR }}/q2admin/plugins ${{ env.LIN64_DIST_DIR }}/
          cp ${{ env.LIN64_DIST_DIR }}/q2admin/config.lua ${{ env.LIN64_DIST_DIR }}/config.lua
          cp ${{ env.LIN64_DIST_DIR }}/tng/gamex86_64.so ${{ env.LIN64_DIST_DIR }}/action/gamex86_64.real.so
          cp ${{ env.CFG_WORKING_DIR }}/action/urbanjungle.pkz ${{ env.LIN64_DIST_DIR }}/action/
          cp ${{ env.CFG_WORKING_DIR }}/action/credits.pkz ${{ env.LIN64_DIST_DIR }}/action/

      - name: Get version info for distrib
        id: version
        run: |
          cd config/build && bash -x getversion.sh distrib >> ../../${{ env.LIN64_DIST_DIR }}/versions

      - name: Combine version info into a single file
        run: |
          cat ${{ env.LIN64_DIST_DIR }}/q2admin/versions >> ${{ env.LIN64_DIST_DIR }}/versions
          cat ${{ env.LIN64_DIST_DIR }}/tng/versions >> ${{ env.LIN64_DIST_DIR }}/versions

      - name: Cleanup directory before packaging
        run: |
          rm -rf ${{ env.LIN64_DIST_DIR }}/q2admin/
          rm -rf ${{ env.LIN64_DIST_DIR }}/tng/

      ## Linux ARM64
      - name: Download latest Linux arm64 Q2Pro artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: Q2Pro-Linux.yaml
          name: q2pro-linux-arm64
          path: ${{ env.LINARM64_DIST_DIR }}/

      - name: Set Linux binaries to executable, remove q2pro
        run: |
          chmod +x ${{ env.LINARM64_DIST_DIR }}/q2proded
          rm -rf ${{ env.LINARM64_DIST_DIR }}/q2pro

      - name: Download latest Linux arm64 TNG artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: TNG-Linux.yaml
          name: tng-lin-arm64-library
          path: ${{ env.LINARM64_DIST_DIR }}/tng

      - name: Download latest Linux arm64 q2admin artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: q2admin-Linux.yaml
          name: q2admin-lin-arm64-library
          path: ${{ env.LINARM64_DIST_DIR }}/q2admin
      
      - name: Copy server files, initial maps, q2admin and TNG
        run: |
          cp -r ${{ env.CFG_WORKING_DIR }}/server/serverfiles/* ${{ env.LINARM64_DIST_DIR }}/action/
          cp ${{ env.LINARM64_DIST_DIR }}/q2admin/gamearm64.so ${{ env.LINARM64_DIST_DIR }}/action/gamearm64.so
          cp -r ${{ env.LINARM64_DIST_DIR }}/q2admin/plugins ${{ env.LINARM64_DIST_DIR }}/
          cp ${{ env.LINARM64_DIST_DIR }}/q2admin/config.lua ${{ env.LINARM64_DIST_DIR }}/config.lua
          cp ${{ env.LINARM64_DIST_DIR }}/tng/gamearm64.so ${{ env.LINARM64_DIST_DIR }}/action/gamearm64.real.so
          cp ${{ env.CFG_WORKING_DIR }}/action/urbanjungle.pkz ${{ env.LINARM64_DIST_DIR }}/action/
          cp ${{ env.CFG_WORKING_DIR }}/action/credits.pkz ${{ env.LINARM64_DIST_DIR }}/action/

      - name: Get version info for distrib
        id: version
        run: |
          cd config/build && bash -x getversion.sh distrib >> ../../${{ env.LINARM64_DIST_DIR }}/versions

      - name: Combine version info into a single file
        run: |
          cat ${{ env.LINARM64_DIST_DIR }}/q2admin/versions >> ${{ env.LINARM64_DIST_DIR }}/versions
          cat ${{ env.LINARM64_DIST_DIR }}/tng/versions >> ${{ env.LINARM64_DIST_DIR }}/versions

      - name: Cleanup directory before packaging
        run: |
          rm -rf ${{ env.LINARM64_DIST_DIR }}/q2admin/
          rm -rf ${{ env.LINARM64_DIST_DIR }}/tng/

      - name: Generate Linux tar files
        run: |
          tar czpf aqtion-serverfiles-${{ env.GIT_TAG }}-linux-amd64.tar.gz ${{ env.LIN64_DIST_DIR }}
          tar czpf aqtion-serverfiles-${{ env.GIT_TAG }}-linux-arm64.tar.gz ${{ env.LINARM64_DIST_DIR }}

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: AQtion Server Files ${{ github.event.inputs.release_tag }}
          tag_name: ${{ github.event.inputs.release_tag }}
          #body_path: CHANGELOG.md
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload dist tarball to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          body_path: 
          tag_name: ${{ github.event.inputs.release_tag }}
          files: |
            aqtion-serverfiles-${{ env.GIT_TAG }}-linux-amd64.tar.gz
            aqtion-serverfiles-${{ env.GIT_TAG }}-linux-arm64.tar.gz

