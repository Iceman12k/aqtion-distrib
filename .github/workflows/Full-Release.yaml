name: Full Release

# on:
#   push:
#     branches: [main, ci]
#   pull_request:
#     branches: [main]

on:
  workflow_dispatch:

env:
  Q2PRO_WORKING_DIR: "q2pro-build"
  TNG_WORKING_DIR: "tng-build"
  CFG_WORKING_DIR: "config"
  LIN64_DIST_DIR: "linux-x64-dist/action"
  WIN64_DIST_DIR: "windows-x64-dist/action"
  WIN32_DIST_DIR: "windows-i386-dist/action"

jobs:
  linux_build_q2pro:
    #runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout Q2Pro
        uses: actions/checkout@v3
        with:
          repository: skullernet/q2pro
          path: ${{ env.Q2PRO_WORKING_DIR }}

      - name: Checkout distrib
        uses: actions/checkout@v3
        with:
          repository: actionquake/distrib
          path: ${{ env.CFG_WORKING_DIR }}

      
      - name: Checkout aq2-tng
        uses: actions/checkout@v3
        with:
          repository: aq2-tng/aq2-tng
          ref: 'bots'
          path: ${{ env.TNG_WORKING_DIR }}

      - name: Q2Pro version info
        id: q2pro_version
        working-directory: q2pro-build
        run: echo "::set-output name=version::$(bash version.sh | head -n 1)"

      - name: Release version
        run: echo "::set-output name=version::v0.0.1"
        id: version

      - name: Generate dist directory
        run: |
          mkdir -p ${{ env.LIN64_DIST_DIR }}/action
          mkdir -p ${{ env.WIN64_DIST_DIR }}/action
          mkdir -p ${{ env.WIN32_DIST_DIR }}/action

      # Self-hosted runner has these
      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt install -y libsdl2-dev libopenal-dev \
      #     libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
      #     libcurl4-gnutls-dev

      - name: Build Q2Pro - Linux 64-bit
        working-directory: ${{ env.Q2PRO_WORKING_DIR }}
        run: make strip V=1
        env:
          CC: "gcc"
          CONFIG_FILE: "../${{ env.CFG_WORKING_DIR }}/build/ci/config_linux64"

      - name: Copy Linux 64-bit Q2Pro artifacts
        run: |
          cp ${{ env.Q2PRO_WORKING_DIR }}/q2pro ${{ env.Q2PRO_WORKING_DIR }}/q2proded ${{ env.LIN64_DIST_DIR }}/

      - name: Build Q2Pro - Windows 64-bit
        working-directory: ${{ env.Q2PRO_WORKING_DIR }}
        run: make clean && make strip V=1
        env:
          CONFIG_FILE: "../${{ env.CFG_WORKING_DIR }}/build/ci/config_windows64"

      - name: Copy Windows 64-bit Q2Pro artifacts
        run: |
          cp ${{ env.Q2PRO_WORKING_DIR }}/q2pro.exe ${{ env.Q2PRO_WORKING_DIR }}/q2proded.exe ${{ env.WIN64_DIST_DIR }}/

      - name: Build Q2Pro - Windows 32-bit
        working-directory: ${{ env.Q2PRO_WORKING_DIR }}
        run: make clean && make strip V=1
        env:
          CONFIG_FILE: "../${{ env.CFG_WORKING_DIR }}/build/ci/config_windows32"

      - name: Copy Windows 32-bit Q2Pro artifacts
        run: |
          cp ${{ env.Q2PRO_WORKING_DIR }}/q2pro.exe ${{ env.Q2PRO_WORKING_DIR }}/q2proded.exe ${{ env.WIN32_DIST_DIR }}/

      - name: Build TNG - Linux 64-bit
        working-directory: ${{ env.TNG_WORKING_DIR }}/source
        run: make V=1
        env:
          CC: "gcc"

      - name: Copy Linux 64-bit TNG artifacts
        run: |
          cp -r ${{ env.TNG_WORKING_DIR }}/source/gamex86_64.so ${{ env.CFG_WORKING_DIR }}/dist/action/* ${{ env.LIN64_DIST_DIR }}/action/
    
      - name: Build TNG - Windows 64-bit
        working-directory: ${{ env.TNG_WORKING_DIR }}/source
        run: make clean && make V=1
        env:
          IFDEF: "WIN64"

      - name: Copy Windows 64-bit TNG artifacts
        working-directory: ${{ env.TNG_WORKING_DIR }}/source
        run: |
          cp ${{ env.TNG_WORKING_DIR }}/source/gamex86_64.dll ${{ env.CFG_WORKING_DIR }}/dist/action/* ${{ env.WIN64_DIST_DIR }}/

      - name: Build TNG - Windows 32-bit
        working-directory: ${{ env.TNG_WORKING_DIR }}/source
        run: make clean && make V=1
        env:
          IFDEF: "WIN32"

      - name: Copy Windows 32-bit TNG artifacts
        working-directory: ${{ env.TNG_WORKING_DIR }}/source
        run: |
          cp ${{ env.TNG_WORKING_DIR }}/source/gamex86.dll ${{ env.CFG_WORKING_DIR }}/dist/action/* ${{ env.WIN32_DIST_DIR }}/
          
      - name: Generate dist files
        run: |
          tar czpf aq-linux-x64-${{ steps.version.outputs.version }}.tar.gz ${{ env.LIN64_DIST_DIR }}
          zip -r aq-windows-x64-${{ steps.version.outputs.version }}.zip ${{ env.WIN64_DIST_DIR }}
          zip -r aq-windows-i386-${{ steps.version.outputs.version }}.zip ${{ env.WIN32_DIST_DIR }}
    
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload dist tarball to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          files: |
            aq-linux-x64-${{ steps.version.outputs.version }}.tar.gz
            aq-windows-x64-${{ steps.version.outputs.version }}.zip
            aq-windows-i386-${{ steps.version.outputs.version }}.zip

